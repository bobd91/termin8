#!/bin/env tcl

fconfigure stdin -blocking 0
fconfigure stdin -buffering none
fconfigure stdin -translation binary

fconfigure stdout -buffering none
fconfigure stdout -translation binary

set unreadq [list]

proc readnext {} {
  yield
}

proc unread {ch} {
  global unreadq
  putuc Unread $ch
  lappend unreadq $ch
}

proc readp {} {
  set p ""
  while {1} {
    set ch [readnext]
    if { ![string is digit $ch] } {
      return [list $p $ch]
    }
    append p $ch
  }
}

proc readps {} {
  set ps [list]
  while {1} {
    lassign [readp] p ch
    lappend ps $p
    if { ";" ne $ch } {
      return [list $ps $ch]
    }
  }
}

proc formatps {ps} {
  set l [list ( [join $ps ;] )]
  join $l ""
}

proc putuc {type ch} {
  puts -nonewline "$type:"
  putc $ch
}

proc putc {ch} {
  if { $ch ne "" } {
    binary scan $ch cu b
    if { $b < 32 || $b > 127 } {
      putsn "\\0x[binary encode hex $ch]"
    } else {
      putsn $ch
    }
  }
}

proc putsn {s} {
  puts -nonewline $s
}

proc putse {s} {
  putsen $s
  puts ""
}

proc putsen {s} {
  puts -nonewline "\nEsc $s"
}

proc escape {ch} {
  switch $ch {
    "\[" {
      csi [readnext]
    }
    default {
      puts -nonewline "\nEsc "
      putc $ch
    }
  }
}

proc csi {ch} {
  switch $ch {
    ? {
      csi_dec {*}[readps]
    }
    default {
      putse "CSI$ch"
    }
  }
}

proc csi_dec {ps ch} {
  switch $ch {
    h {
        dec_set $ps
    }
    default {
      putse "CSI-DEC[formatps $ps]$ch"
    }
  }
}

proc dec_set {ps} {
  putsen "DECSET("

  foreach p $ps {
    switch $p {
      2004 {
        putsn "(Set bracketed paste mode)"
      }
      default {
        putsn "($p)"
      }
    }
  }

  puts ")"
}

proc getc {} {
  chan read stdin 1
}

proc receive {} {
  global unreadq
  if { 0 < [llength $unreadq] } {
    for {set i 0} {$i < [llength $unreadq]} {incr i} {
      set ch [lindex $unreadq "end-$i"]
      putuc Reread $ch
      process $ch
    }
    set unreadq [list]
  }
  set ch [getc]
  if { $ch ne "" } {
    process $ch
  }
}

proc run {} {
  set ch [readnext]

  while { $ch != "" } {
    switch $ch {
      "\u001b" { 
        escape [readnext]
      }
      default {
        putc $ch
      }
    }

    set ch [readnext]
  }
}

coroutine process run

chan event stdin readable [list receive]

vwait forever
